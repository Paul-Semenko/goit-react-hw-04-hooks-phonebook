{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js","components/ContactForm/Style.module.css","components/Filter/style.module.css","components/ContactList/style.module.css"],"names":["ContactForm","onSubmit","nameInputId","uuid","numberInputId","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","reset","e","preventDefault","className","style","form","htmlFor","form__title","type","pattern","title","required","onChange","id","form__input","form__button","ContactList","contacts","handleRemove","contacts__list","map","el","contacts__item","onClick","contact__button","Filter","handleChange","filter__title","autoComplete","filter__input","App","contact","localStorage","getItem","JSON","parse","setContacts","filter","setFilter","useEffect","setItem","stringify","find","alert","prevContacts","contacts__title","regExp","RegExp","target","toLowerCase","arr","split","i","length","match","prevState","elem","ReactDOM","render","StrictMode","document","getElementById","querySelector","module","exports"],"mappings":"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","file":"static/js/main.d7bf4710.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuid } from \"uuid\";\r\nimport style from './Style.module.css';\r\n\r\n\r\nexport function ContactForm({onSubmit}) {\r\n    const nameInputId = uuid();\r\n    const numberInputId = uuid();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    \r\n    const handleInputChange = event => {\r\n        if (event.currentTarget.name === 'name') {\r\n            setName(event.currentTarget.value);\r\n        } else if (event.currentTarget.name === 'number') {\r\n            setNumber(event.currentTarget.value);\r\n    }\r\n        \r\n    };\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit(name, number);\r\n        reset();\r\n    }\r\n        \r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n \r\n    return (\r\n        <form onSubmit={handleSubmit}\r\n            className={style.form}>\r\n                <h1>Phonebook</h1>\r\n          <label htmlFor={nameInputId} className={style.form__title}>Name\r\n        <input\r\n  type=\"text\"\r\n  name=\"name\"\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={handleInputChange}\r\n                        id={nameInputId}\r\n                        className={style.form__input}\r\n                        \r\n          />\r\n          </label>\r\n          <label htmlFor={numberInputId} className={style.form__title}>Number\r\n          <input\r\n  type=\"tel\"\r\n  name=\"number\"\r\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                        onChange={handleInputChange}\r\n                        id={numberInputId}\r\n                        className={style.form__input}\r\n/>\r\n         </label> \r\n          <button className={style.form__button}>Add contact</button>\r\n        </form>\r\n    )\r\n    \r\n};\r\n\r\n ContactForm.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\n\r\n\r\nexport  default function  ContactList ({contacts, handleRemove}) {\r\n \r\n    return (\r\n      <ul className={style.contacts__list} >\r\n        {contacts.map((el) => (\r\n          <li key={el.id} className={style.contacts__item}>\r\n            {el.name} : {el.number}\r\n           <button\r\n              type=\"button\"\r\n              id={el.id}\r\n            onClick={handleRemove}\r\n                    className={style.contact__button}\r\n            >\r\n              Delete\r\n            </button>\r\n            </li>            \r\n        ))}\r\n            \r\n        </ul>\r\n         \r\n    );\r\n}\r\n\r\n     \r\n\r\n\r\n\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    handleRemove: PropTypes.func,\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\n\r\nexport default function Filter({handleChange}) {\r\n  \r\n    return (\r\n      <>\r\n        <label htmlFor=\"search\" className={style.filter__title}>\r\n          Find contacts by name\r\n        \r\n        <input\r\n          \r\n                    autoComplete=\"off\"\r\n                    id=\"search\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]\"\r\n                    onChange={(e) => {\r\n                        e.preventDefault();\r\n                        handleChange(e);\r\n                    }}\r\n                    className={style.filter__input}\r\n            ></input>\r\n            </label>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nFilter.propTypes = {\r\n    handleChange: PropTypes.func,\r\n}\r\n\r\n","import { useState, useEffect} from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport style from './components/Filter/style.module.css';\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport ContactList  from './components/ContactList/ContactList';\nimport Filter from \"./components/Filter/Filter\";\n\n\nexport default function App() {\n  \n  const [contacts, setContacts] = useState(() => {\n    const contact = localStorage.getItem('contacts');\n    if (contact) {\n      return JSON.parse(contact);\n    } else { return []; }\n  });\n  const [filter, setFilter] = useState([]);\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n\n  const formSubmitHandler = (name, number ) => {\n    if (!contacts.find((el) => el.name === name)) {\n      setContacts(prevContacts => \n        [...prevContacts, { name, number, id: uuid() }]);\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n  \n  \n\n const handleFilter = () => {\n    return contacts.filter((el) => {\n      const arr = el.name.toLowerCase().split(\" \");\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].toLowerCase().match(filter) !== null) {\n          return true;\n        }\n      }\n      return false;\n    });\n};\n  \n  \n const handleChange = (e) => {\n    const regExp = new RegExp(`^${e.target.value.toLowerCase()}`);\n    setFilter(regExp);\n    \n  };\n\n\n  \n\n const handleRemove = (e) => {\n    setContacts(prevState =>\n       prevState.filter((elem) => elem.id !== e.target.id));\n  };\n\n\n  \n    \n    return (\n      <div>\n        <ContactForm\n          onSubmit={formSubmitHandler}\n        />\n        <h2 className={style.contacts__title}>Contacts</h2>\n        <Filter handleChange={handleChange} />\n        <ContactList contacts={handleFilter()}\n          handleRemove={handleRemove}\n          />\n      </div>\n    );\n\n  \n}\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Style_form__1caZ1\",\"form__title\":\"Style_form__title__bVLd7\",\"form__input\":\"Style_form__input__OItku\",\"form__button\":\"Style_form__button__1IKVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__title\":\"style_filter__title__m62Wl\",\"filter__input\":\"style_filter__input__p0CPr\",\"contacts__title\":\"style_contacts__title__2_kQF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__button\":\"style_contact__button__2_loR\",\"contacts__list\":\"style_contacts__list__NFmJ_\",\"contacts__item\":\"style_contacts__item__3FT1k\"};"],"sourceRoot":""}